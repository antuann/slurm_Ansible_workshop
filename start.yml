---
- name: "install app"
  hosts: app_servers
  become: true
  roles:
    - role: geerlingguy.nginx
      nginx_user: "nginx"
    - role: postgres
      rp_db_host: "{{ db_host }}"
      rp_db_port: "{{ db_port }}"
      rp_db_name: "{{ db_name }}"
      rp_db_user: "{{ app_user }}"
      rp_db_password: "{{ db_password }}"
 
  vars_files:
    - app_settings.yml
   
  tasks:
  # донастраиваем nginx
  - name: "Copy nginx conf"
    ansible.builtin.template:
      src: templates/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      owner: root
      group: root
      mode: 0644
  
  - name: "Create nginx user"
    ansible.builtin.user:
      name: "nginx"
      comment: "user for start nginx"
      create_home: true
      shell: /bin/bash

  - name: "creating a user in ubuntu"
    ansible.builtin.user:
      name: "{{ app_user }}"
      comment: "user for start app"
      create_home: true
      shell: /bin/bash
      groups: sudo
    when: ansible_os_family == 'Debian'

  - name: "creating a user in centos"
    ansible.builtin.user:
      name: "{{ app_user }}"
      comment: "user for start app"
      create_home: true
      shell: /bin/bash
      groups: wheel
    when: ansible_os_family == 'RedHat'


  - name: Add authorized key id_rsa.pub
    authorized_key:
      user: "{{ app_user }}"
      state: present
      key: "{{ lookup('file', '{{ public_ssh_key }}') }}"
  
  - name: "copy application files to /opt"
    ansible.builtin.unarchive:
      src: xpaste_practicum.tar.gz
      dest: /opt

  - name: "grant user rights to application files"
    ansible.builtin.file:
      path: /opt/xpaste_practicum
      state: directory
      recurse: true
      owner: "{{ app_user }}"
      group: "{{ app_user }}"

  - name: "creating a service file for the application"
    ansible.builtin.template:
      src: templates/app.service.j2
      dest: /etc/systemd/system/app.service
      owner: root
      group: root
      mode: 0644

  - name: "creating a launch file for the application"
    ansible.builtin.template:
      src: templates/start.sh.j2
      dest: /opt/xpaste_practicum/bin/start.sh
      owner: "{{ app_user }}"
      group: "{{ app_user }}"
      mode: 0755
  
  - name: Enabled Service app
    ansible.builtin.service:
      name: app
      enabled: yes
      state: stopped

  handlers:
    - name: "Restart postgres"
      ansible.builtin.service:
        name: postgresql
        state: restarted

  #Дальше мы устанавливаем приложение, там всё сложно поэтому вынес в отдельный ямлик... 
  # наверно переделаю в роль если успею
- import_playbook: ubuntu_app_install.yml 
  when: ansible_os_family == 'Debian'

- import_playbook: centos_app_install.yml
  when: ansible_os_family == 'RedHat'

