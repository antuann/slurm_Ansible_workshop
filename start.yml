---
- name: "install app"
  hosts: app_servers
  become: true
  roles:
    - role: geerlingguy.nginx
      nginx_user: "nginx"
    - role: postgres
      rp_db_host: "{{ db_host }}"
      rp_db_port: "{{ db_port }}"
      rp_db_name: "{{ db_name }}"
      rp_db_user: "{{ app_user }}"
      rp_db_password: "{{ db_password }}"
    - role: app
      app_db_host: "{{ db_host }}"
      app_db_port: "{{ db_port }}"
      app_db_name: "{{ db_name }}"
      app_db_user: "{{ app_user }}"
      app_db_password: "{{ db_password }}"
      app_secret_key_base: "{{ secret_key_base }}"
      app_rails_env: "{{ rails_env }}"
      app_rails_log_to_stdout: "{{ rails_log_to_stdout }}"
      app_app_user: "{{ app_user }}"
      app_version_ruby: "2.6.0"
      app_public_ssh_key: "~/.ssh/id_rsa.pub"
 
  vars_files:
    - app_settings.yml
   
  tasks:
  # донастраиваем nginx
  - name: "Copy nginx conf"
    ansible.builtin.template:
      src: templates/nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      owner: root
      group: root
      mode: 0644
    notify:
    - Restart nginx

  - name: "Create nginx user"
    ansible.builtin.user:
      name: "nginx"
      comment: "user for start nginx"
      create_home: true
      shell: /bin/bash
    notify:
    - Restart nginx
 
  - name: "Start nginx"
    ansible.builtin.service:
      name: nginx
      state: started


  - name: permit traffic in default zone for https service
    ansible.posix.firewalld:
      service: http
      permanent: true
      state: enabled
    when: ansible_os_family == 'RedHat'
    notify:
    - Reload firewalld

  handlers:
    - name: "Restart postgres"
      ansible.builtin.service:
        name: postgresql
        state: restarted

    - name: "Restart app"
      ansible.builtin.service:
        name: app
        state: restarted

    - name: "Restart nginx"
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: "Reload firewalld"
      ansible.builtin.service:
        name: firewalld
        state: reloaded

